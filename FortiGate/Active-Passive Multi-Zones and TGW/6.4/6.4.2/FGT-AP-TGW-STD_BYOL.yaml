AWSTemplateFormatVersion: "2010-09-09"
Description: 3 VPC + 3 Subnet/VPC + 3 Ubuntu Hosts + 3 Route Tables - 1 VPC has internet Access the other 2 do not + TGW
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: VPC Configuration
        Parameters:
          - VPCMGMTCIDR
          - VPCMGMTSubnetCIDRs
          - VPCSVC1CIDR
          - VPCSVC1SubnetCIDRs
          - VPCSVC2CIDR
          - VPCSVC2SubnetCIDRs
      - Label:
          default: Security Hub Configuration
        Parameters:
          - VPCCIDR
          - DataSubnet1
          - DataSubnet1RouterIP
          - RelaySubnet1
          - RelaySubnet1RouterIP
          - HeartbeatSubnet1
          - MgmtSubnet1
          - MgmtSubnet1RouterIP
          - DataSubnet2
          - DataSubnet2RouterIP
          - RelaySubnet2
          - RelaySubnet2RouterIP
          - HeartbeatSubnet2
          - MgmtSubnet2
          - MgmtSubnet2RouterIP
      - Label:
          default: Host Configuration
        Parameters:
          - KEYNAME
          - InstanceType
          - MGMTUbu1PrivateIP
          - SVC1Ubu1PrivateIP
          - SVC2Ubu1PrivateIP
          - SSHLocation
      - Label:
          default: TGW Configuration
      - Label:
          default: FortiGate Instance Configuration
        Parameters:
          - AZForFGTA
          - AZForFGTB
          - FGTInstanceType
          - CIDRForFGTAccess
          - KeyPair
          - HAsecret
      - Label:
          default: FortiGate IP Configuration
        Parameters:
          - FortiGateAHeartbeatIP
          - FortiGateBHeartbeatIP
Parameters:
  VPCMGMTCIDR:
    Type: String
    Default: 10.99.0.0/16
    Description: Provide a network CIDR for VPC1 - MGMT
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  VPCMGMTSubnetCIDRs:
    Description: >-
      Comma-delimited list of CIDR blocks for VPC1: Format (AZ1 Subnet, AZ2
      Subnet)
    Type: CommaDelimitedList
    Default: '10.99.1.0/24, 10.99.2.0/24'
  VPCSVC1CIDR:
    Type: String
    Default: 10.98.0.0/16
    Description: Provide a network CIDR for VPC2 - SVC1
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  VPCSVC1SubnetCIDRs:
    Description: >-
      Comma-delimited list of CIDR blocks for VPC1: Format (AZ1 Subnet, AZ2
      Subnet)
    Type: CommaDelimitedList
    Default: '10.98.1.0/24, 10.98.2.0/24'
  VPCSVC2CIDR:
    Type: String
    Default: 10.97.0.0/16
    Description: Provide a network CIDR for VPC4 - SVC2
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  VPCSVC2SubnetCIDRs:
    Description: >-
      Comma-delimited list of CIDR blocks for VPC3: Format (AZ1 Subnet, AZ2
      Subnet)
    Type: CommaDelimitedList
    Default: '10.97.1.0/24, 10.97.2.0/24'
  KEYNAME:
    Description: Select Keypair for all hosts - Existing Keypair is required 
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: EC2 Instance Type - Recommended small instance sizes
    Type: String
    Default: t3.micro
    AllowedValues:
    - t3.micro
    - t3.nano
    - t3.small
  MGMTUbu1PrivateIP:
    Description: Please provide and IP for the first Ubuntu Host (AZ1 in VPC1)
    Type: String
    Default: 10.99.1.10
  SVC1Ubu1PrivateIP:
    Description: Please provide and IP for the first Ubuntu Host (AZ1 in VPC1)
    Type: String
    Default: 10.98.1.10  
  SVC2Ubu1PrivateIP:
    Description: Please provide and IP for the first Ubuntu Host (AZ1 in VPC1)
    Type: String
    Default: 10.97.1.10  
  SSHLocation:
    Description: The IP Address allowed to connect to the Ubuntu hosts via SSH. 
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  VPCCIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: Enter the VPC CIDR that you are using for security Hub
  AZForFGTA:
    Type: 'AWS::EC2::AvailabilityZone::Name'
    Description: Select the first AZ for FortiGateA
  AZForFGTB:
    Type: 'AWS::EC2::AvailabilityZone::Name'
    Description: Select the second AZ for FortiGateB
  DataSubnet1:
    Type: String
    Default: 10.0.1.0/24
    Description: Provide a network CIDR for the Data Subnet1
  DataSubnet1RouterIP:
    Type: String
    Default: 10.0.1.1
    Description: Provide the IP of the gateway for the Data subnet1
  RelaySubnet1:
    Type: String
    Default: 10.0.2.0/24
    Description: Provide a network CIDR for the Relay subnet1
  RelaySubnet1RouterIP:
    Type: String
    Default: 10.0.2.1
    Description: Provide the IP of the gateway for the Relay subnet1
  HeartbeatSubnet1:
    Type: String
    Default: 10.0.3.0/24
    Description: Provide a network CIDR for the heartbeat subnet1
  MgmtSubnet1:
    Type: String
    Default: 10.0.4.0/24
    Description: Provide a network CIDR for the management subnet1
  MgmtSubnet1RouterIP:
    Type: String
    Default: 10.0.4.1
    Description: Provide the IP of the gateway for the management subnet1
  DataSubnet2:
    Type: String
    Default: 10.0.10.0/24
    Description: Provide a network CIDR for the Data subnet2
  DataSubnet2RouterIP:
    Type: String
    Default: 10.0.10.1
    Description: Provide the IP of the gateway for the Data subnet2
  RelaySubnet2:
    Type: String
    Default: 10.0.20.0/24
    Description: Provide a network CIDR for the Relay subnet2
  HeartbeatSubnet2:
    Type: String
    Default: 10.0.30.0/24
    Description: Provide a network CIDR for the heartbeat subnet2
  MgmtSubnet2:
    Type: String
    Default: 10.0.40.0/24
    Description: Provide a network CIDR for the management subnet2
  MgmtSubnet2RouterIP:
    Type: String
    Default: 10.0.40.1
    Description: Provide the IP of the gateway for the management subnet2
  FGTInstanceType:
    Type: String
    Default: c5.xlarge
    Description: Select the instance type for the FortiGates
    AllowedValues:
      - t3.xlarge
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
  CIDRForFGTAccess:
    Type: String
    Default: 0.0.0.0/0
    Description: Enter the CIDR from which FortiGate instances need to be accessed from
  KeyPair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Select the keypair for the FortiGates
  HAsecret:
    Type: String
    Description: Secret for HA peer identification
  FortiGateAHeartbeatIP:
    Type: String
    Default: 10.0.3.10/24
    Description: >-
      Enter the IP address in CIDR form for the heartbeat interface of
      FortiGateA (IP from heartbeat Subnet1)
  FortiGateBHeartbeatIP:
    Type: String
    Default: 10.0.30.10/24
    Description: >-
      Enter the IP address in CIDR form for the heartbeat interface of
      FortiGateB (IP from heartbeat Subnet2)
Mappings:
  RegionMap:
    af-south-1:
      fgtami: ami-0bea444e3d801a064
    eu-north-1:
      fgtami: ami-08d7c0dae1b5ac007
    ap-south-1:
      fgtami: ami-06b87bc7f5c507930
    eu-west-3:
      fgtami: ami-080f116cd87b1a907
    eu-west-2:
      fgtami: ami-03015a8c9dd9844b8
    eu-west-1:
      fgtami: ami-0e7928c3e161bfad1
    ap-northeast-2:
      fgtami: ami-01d14d2e5782616a4
    ap-northeast-1:
      fgtami: ami-0701aa07e48c4d908
    sa-east-1:
      fgtami: ami-044322b7156fc185b
    ca-central-1:
      fgtami: ami-0dbfcb720983c1ee5
    ap-southeast-1:
      fgtami: ami-01a20085da35043a5
    ap-southeast-2:
      fgtami: ami-01a19dcdcc11b06d4
    ap-east-1:
      fgtami: ami-0e7928c3e161bfad1
    eu-central-1:
      fgtami: ami-004dce2bcfdcad28c
    us-east-1: 
      fgtami: ami-0764c97f51d5ca116
    us-east-2:
      fgtami: ami-0e138857049791cc2
    us-west-1: 
      fgtami: ami-049848d9aabecd3d7
    us-west-2:
      fgtami: ami-036c4658b4595cc72
    me-south-1:
      fgtami: ami-07d992bb988ab16e4
  AWSInstanceType2Arch:
    t3.micro:
      Arch: HVM64
    t3.nano:
      Arch: HVM64
    t3.small:
      Arch: HVM64
  AWSRegionArch2AMI:
    eu-north-1:
      HVM64: ami-0f630db6194a81ad0
    ap-south-1:
      HVM64: ami-03b5297d565ef30a6
    eu-west-3:
      HVM64: ami-07eda9385feb1e969
    eu-west-2:
      HVM64: ami-0cb790308f7591fa6
    eu-west-1:
      HVM64: ami-04d5cc9b88f9d1d39
    ap-northeast-2:
      HVM64: ami-0db78afd3d150fc18
    me-south-1:
      HVM64: ami-05613911cb72781b8
    ap-northeast-1:
      HVM64: ami-052652af12b58691f  
    sa-east-1:
      HVM64: ami-0b032e878a66c3b68
    ca-central-1:
      HVM64: ami-0bf54ac1b628cf143
    ap-east-1:
      HVM64: ami-33a7e042
    ap-southeast-1:
      HVM64: ami-0cbc6aae997c6538a
    ap-southeast-2: 
      HVM64: ami-08fdde86b93accf1c
    eu-central-1:
      HVM64: ami-0ec1ba09723e5bfac
    us-east-1:
      HVM64: ami-0fc61db8544a617ed
    us-east-2:
      HVM64: ami-0e01ce4ee18447327
    us-west-1:
      HVM64: ami-09a7fe78668f1e2c0
    us-west-2:
      HVM64: ami-0ce21b51cb31a48b8
Conditions: {}
Resources:
  VPCMGMT:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCMGMTCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join 
              - '-'
              - - !Ref 'AWS::StackName'
                - MGMT
  VPCSVC1:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCSVC1CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - SVC1
  VPCSVC2:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCSVC2CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - SVC2
  VPCID:
    Properties:
      CidrBlock: !Ref VPCCIDR
      Tags:
        - Key: Name
          Value: 
            !Join 
              - '-'
              - - !Ref 'AWS::StackName'
                - SECHUB
    Type: 'AWS::EC2::VPC'
  VPCMGMTSUB1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCMGMT
      CidrBlock: !Select [0,!Ref VPCMGMTSubnetCIDRs]
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - MGMTAZ1SUB1
  VPCMGMTSUB2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCMGMT
      CidrBlock: !Select 
        - 1
        - !Ref VPCMGMTSubnetCIDRs
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - MGMTAZ2SUB1
  VPCSVC1SUB1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCSVC1
      CidrBlock: !Select 
        - 0
        - !Ref VPCSVC1SubnetCIDRs
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - SVC1AZ1SUB1
  VPCSVC1SUB2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCSVC1
      CidrBlock: !Select 
        - 1
        - !Ref VPCSVC1SubnetCIDRs
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - SVC1AZ2SUB1
  VPCSVC2SUB1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCSVC2
      CidrBlock: !Select 
        - 0
        - !Ref VPCSVC2SubnetCIDRs
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - SVC2AZ1SUB1
  VPCSVC2SUB2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPCSVC2
      CidrBlock: !Select 
        - 1
        - !Ref VPCSVC2SubnetCIDRs
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - SVC2AZ2SUB1
  RelaySubnetA:
    Properties:
      AvailabilityZone: !Ref AZForFGTA
      CidrBlock: !Ref RelaySubnet1
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - RelaySubnet1
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::Subnet'
  DataSubnetA:
    Properties:
      AvailabilityZone: !Ref AZForFGTA
      CidrBlock: !Ref DataSubnet1
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - DataSubnet1
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::Subnet'
  HeartbeatSubnetA:
    Properties:
      AvailabilityZone: !Ref AZForFGTA
      CidrBlock: !Ref HeartbeatSubnet1
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - HeartbeatSubnet1
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::Subnet'
  MgmtSubnetA:
    Properties:
      AvailabilityZone: !Ref AZForFGTA
      CidrBlock: !Ref MgmtSubnet1
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - MgmtSubnet1
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::Subnet'
  RelaySubnetB:
    Properties:
      AvailabilityZone: !Ref AZForFGTB
      CidrBlock: !Ref RelaySubnet2
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - RelaySubnet2
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::Subnet'
  DataSubnetB:
    Properties:
      AvailabilityZone: !Ref AZForFGTB
      CidrBlock: !Ref DataSubnet2
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - DataSubnet2
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::Subnet'
  HeartbeatSubnetB:
    Properties:
      AvailabilityZone: !Ref AZForFGTB
      CidrBlock: !Ref HeartbeatSubnet2
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - HeartbeatSubnet2
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::Subnet'
  MgmtSubnetB:
    Properties:
      AvailabilityZone: !Ref AZForFGTB
      CidrBlock: !Ref MgmtSubnet2
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - MgmtSubnet2
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::Subnet'
  AttachGateway:
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::VPCGatewayAttachment'
  InternetGateway:
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - IGW
    Type: 'AWS::EC2::InternetGateway'
  MgmtRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - HUBMgmt-RT
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::RouteTable'
  MgmtDefaultRoute:
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref MgmtRouteTable
    Type: 'AWS::EC2::Route'
  HeartbeatRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - HUBHb-RT
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::RouteTable'
  InternetGatewayMGMT:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - MGMT-IGW
  AttachGatewayMGMT:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPCMGMT
      InternetGatewayId: !Ref InternetGatewayMGMT
  RouteTableMGMT:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCMGMT
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - VPCMGMT-RT
  RouteTableSVC1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCSVC1
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - VPC1SVC-RT
  RouteTableSVC2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCSVC2
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref 'AWS::StackName'
              - VPC2SVC-RT
  RouteMGMT:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGatewayMGMT
    Properties:
      RouteTableId: !Ref RouteTableMGMT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGatewayMGMT
  SubnetRouteTableAssociation1MGMT:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VPCMGMTSUB1
      RouteTableId: !Ref RouteTableMGMT
  SubnetRouteTableAssociation2MGMT:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VPCMGMTSUB2
      RouteTableId: !Ref RouteTableMGMT
  SubnetRouteTableAssociation1SVC1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VPCSVC1SUB1
      RouteTableId: !Ref RouteTableSVC1
  SubnetRouteTableAssociation2SVC1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VPCSVC1SUB2
      RouteTableId: !Ref RouteTableSVC1
  SubnetRouteTableAssociation1SVC2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VPCSVC2SUB1
      RouteTableId: !Ref RouteTableSVC2
  SubnetRouteTableAssociation2SVC2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VPCSVC2SUB2
      RouteTableId: !Ref RouteTableSVC2
  EIPMGMTUbu1ENI1:
    Type: AWS::EC2::EIP
    DependsOn: AttachGatewayMGMT
    Properties: 
      Domain: vpc
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - MGMTUBU1ENIEIP
  MGMTUbu1ENI:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: ENI for MGMTUBU1
      SourceDestCheck: false
      GroupSet:
      - !Ref InstanceSecurityGroupMGMT
      SubnetId: !Ref VPCMGMTSUB1
      PrivateIpAddress: !Ref MGMTUbu1PrivateIP
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - MGMTUBU1ENI1
  EIPAssociationMGMT:
    Type: AWS::EC2::EIPAssociation
    Properties:
      EIP: !Ref EIPMGMTUbu1ENI1
      InstanceId: !Ref MGMTUbu1
  MGMTUbu1:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KEYNAME
      ImageId: !FindInMap [ AWSRegionArch2AMI, !Ref 'AWS::Region' , !FindInMap [ AWSInstanceType2Arch, !Ref InstanceType, Arch ] ]
      InstanceType: !Ref InstanceType
      NetworkInterfaces:
      - NetworkInterfaceId: 
          Ref: MGMTUbu1ENI
        DeviceIndex: '0'
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - MGMTUBU1
  SVC1Ubu1:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KEYNAME
      ImageId: !FindInMap [ AWSRegionArch2AMI, !Ref 'AWS::Region' , !FindInMap [ AWSInstanceType2Arch, !Ref InstanceType, Arch ] ]
      InstanceType: !Ref InstanceType
      NetworkInterfaces:
        - DeviceIndex: '0'
          GroupSet: 
          - !Ref InstanceSecurityGroupSVC1
          SubnetId: !Ref VPCSVC1SUB1
          PrivateIpAddress: !Ref SVC1Ubu1PrivateIP     
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - SVC1UBU1
  SVC2Ubu1:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KEYNAME
      ImageId: !FindInMap [ AWSRegionArch2AMI, !Ref 'AWS::Region' , !FindInMap [ AWSInstanceType2Arch, !Ref InstanceType, Arch ] ]
      InstanceType: !Ref InstanceType
      NetworkInterfaces:
        - DeviceIndex: '0'
          GroupSet: 
          - !Ref InstanceSecurityGroupSVC2
          SubnetId: !Ref VPCSVC2SUB1
          PrivateIpAddress: !Ref SVC2Ubu1PrivateIP     
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - SVC2UBU1
  InstanceSecurityGroupMGMT:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCMGMT
      GroupDescription: Enables SSH Access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp:
          !Ref SSHLocation
      - IpProtocol: icmp
        FromPort: 8
        ToPort: -1
        CidrIp:
          !Ref SSHLocation
  InstanceSecurityGroupSVC1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCSVC1
      GroupDescription: Enables SSH Access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: 8
        ToPort: -1
        CidrIp:
          !Ref SSHLocation
  InstanceSecurityGroupSVC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCSVC2
      GroupDescription: Enables SSH Access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: 8
        ToPort: -1
        CidrIp:
          !Ref SSHLocation
  TGW1:
    Type: AWS::EC2::TransitGateway
    Properties: 
      AutoAcceptSharedAttachments: enable
      DefaultRouteTableAssociation: disable
      DefaultRouteTablePropagation: disable
      Description: Main Transit Gateway for Security Hub      
      DnsSupport: enable
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - TGW1
      VpnEcmpSupport: enable
  TgwAttMGMT:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
      - !Ref VPCMGMTSUB1
      - !Ref VPCMGMTSUB2
      TransitGatewayId: !Ref TGW1
      VpcId: !Ref VPCMGMT
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - ATTMGMT
  TgwAttSVC1:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
      - !Ref VPCSVC1SUB1
      - !Ref VPCSVC1SUB2
      TransitGatewayId: !Ref TGW1
      VpcId: !Ref VPCSVC1
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - ATTSVC1
  TgwAttSVC2:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
      - !Ref VPCSVC2SUB1
      - !Ref VPCSVC2SUB2
      TransitGatewayId: !Ref TGW1
      VpcId: !Ref VPCSVC2
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - ATTSVC2
  TgwAttHUB:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
      - !Ref RelaySubnetA
      - !Ref RelaySubnetB
      TransitGatewayId: !Ref TGW1
      VpcId: !Ref VPCID
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - ATTHUB
  TgwRouteTableVPC:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties: 
      TransitGatewayId: !Ref TGW1
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - VPC
  TgwRouteTableSecHub:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties: 
      TransitGatewayId: !Ref TGW1
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - SECHUB
  TgwRouteTableMGMT:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties: 
      TransitGatewayId: !Ref TGW1
      Tags: 
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - MGMT
  TgwPropagateSVC1toMGMT:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttSVC1
      TransitGatewayRouteTableId: !Ref TgwRouteTableMGMT
  TgwPropagateSVC2toMGMT:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttSVC2
      TransitGatewayRouteTableId: !Ref TgwRouteTableMGMT
  TgwPropagateMGMTtoVPC:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttMGMT
      TransitGatewayRouteTableId: !Ref TgwRouteTableVPC
  TgwAssocSVC1toVPC:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttSVC1
      TransitGatewayRouteTableId: !Ref TgwRouteTableVPC
  TgwAssocSVC2toVPC:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttSVC2
      TransitGatewayRouteTableId: !Ref TgwRouteTableVPC
  TgwAssocMGMTtoMGMT:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttMGMT
      TransitGatewayRouteTableId: !Ref TgwRouteTableMGMT
  TgwAssocHUBtoTGW:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttHUB
      TransitGatewayRouteTableId: !Ref TgwRouteTableSecHub
  TgwPropagateSVC1toHUB:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttSVC1
      TransitGatewayRouteTableId: !Ref TgwRouteTableSecHub
  TgwPropagateSVC2toHUB:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttSVC2
      TransitGatewayRouteTableId: !Ref TgwRouteTableSecHub
  TgwPropagateMGMTtoHUB:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttMGMT
      TransitGatewayRouteTableId: !Ref TgwRouteTableSecHub
  TgwPropagateHUBtoMGMT:
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref TgwAttHUB
      TransitGatewayRouteTableId: !Ref TgwRouteTableMGMT
  TgwRouteVPC:
    Type: 'AWS::EC2::TransitGatewayRoute'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayAttachmentId: !Ref TgwAttHUB
      TransitGatewayRouteTableId: !Ref TgwRouteTableVPC
  VPCRouteMGMTtoHUB:
    Type: 'AWS::EC2::Route'
    DependsOn: TgwAttMGMT
    Properties:
      RouteTableId: !Ref RouteTableMGMT
      DestinationCidrBlock: !Ref VPCCIDR
      TransitGatewayId: !Ref TGW1
  VPCRouteMGMTtoSVC1:
    Type: 'AWS::EC2::Route'
    DependsOn: TgwAttMGMT
    Properties:
      RouteTableId: !Ref RouteTableMGMT
      DestinationCidrBlock: !Ref VPCSVC1CIDR
      TransitGatewayId: !Ref TGW1
  VPCRouteMGMTtoSVC2:
    Type: 'AWS::EC2::Route'
    DependsOn: TgwAttMGMT
    Properties:
      RouteTableId: !Ref RouteTableMGMT
      DestinationCidrBlock: !Ref VPCSVC2CIDR
      TransitGatewayId: !Ref TGW1
  VPCRouteSVC1:
    Type: 'AWS::EC2::Route'
    DependsOn: TgwAttSVC1
    Properties:
      RouteTableId: !Ref RouteTableSVC1
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref TGW1
  VPCRouteSVC2:
    Type: 'AWS::EC2::Route'
    DependsOn: TgwAttSVC2
    Properties:
      RouteTableId: !Ref RouteTableSVC2
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref TGW1
  InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: ApplicationPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:Describe*'
                  - 'ec2:AssociateAddress'
                  - 'ec2:AssignPrivateIpAddresses'
                  - 'ec2:UnassignPrivateIpAddresses'
                  - 'ec2:ReplaceRoute'
                  - 's3:GetObject'
                Resource: '*'
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
  FGTSecGrpBase:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPCID
      GroupDescription: FGTSecGrp
      SecurityGroupIngress:
        - Description: Allow remote access to FGT
          IpProtocol: '-1'
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref CIDRForFGTAccess
        - Description: Allow local VPC access to FGT
          IpProtocol: '-1'
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref VPCCIDR
  FGTSecGrpFGTRule:
    DependsOn: FGTSecGrpBase
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref FGTSecGrpBase
      Description: Allow FGTs to access each other
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !Ref FGTSecGrpBase
  FgtA:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - fgtami
      InstanceType: !Ref FGTInstanceType
      IamInstanceProfile: !Ref InstanceProfile
      KeyName: !Ref KeyPair
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref FGTAENI0
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref FGTAENI1
          DeviceIndex: '1'
        - NetworkInterfaceId: !Ref FGTAENI2
          DeviceIndex: '2'
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - '-FgtA'
      UserData: 
        Fn::Base64: !Join
          - "\n"
          - - "config system vdom-exception"
            - "edit 0"
            - "set object router.static"
            - "next"
            - "edit 0"
            - "set object system.interface"
            - "end"
            - "config system global" 
            - "set hostname FGTA"
            - "end"
            - "config system interface"
            - "edit port1"
            - "set alias Data"
            - "set mode static"
            - !Join
              - ""
              - - "set ip "
                - !Sub ${FGTAENI0.PrimaryPrivateIpAddress}
                - /
                - !Select [ "1", !Split [ "/", !Ref DataSubnet1] ]
            - "set allowaccess ping https ssh"
            - "set mtu-override enable"
            - "set mtu 9001"
            - "next"
            - "edit port2"
            - "set alias hasync"
            - "set mode static"
            - !Join 
              - ""
              - - "set ip " 
                - !Ref FortiGateAHeartbeatIP 
            - "set allowaccess ping"
            - "set mtu-override enable"
            - "set mtu 9001"
            - "next"
            - "set allowaccess ping"
            - "set mtu-override enable"
            - "set mtu 9001"
            - "next"
            - "edit port3"
            - "set alias hamgmt"
            - "set mode static"
            - !Join 
              - ""
              - - "set ip "
                - !Sub ${FGTAENI2.PrimaryPrivateIpAddress}
                - /
                - !Select [ "1", !Split [ "/", !Ref MgmtSubnet1] ]  
            - "set allowaccess ping https ssh"
            - "set mtu-override enable"
            - "set mtu 9001"
            - "next"
            - "end"
            - "config router static"
            - "edit 1"
            - "set device port1"
            - !Join 
              - ""
              - - "set gateway "
                - !Ref DataSubnet1RouterIP
            - "end"
            - "config firewall address"
            - "edit toSVC1"
            - !Join 
              - ""
              - - "set subnet "
                - !Ref VPCSVC1CIDR
            - "next"
            - "edit toSVC2"
            - !Join 
              - ""
              - - "set subnet "
                - !Ref VPCSVC2CIDR
            - "next"
            - "edit toMGMT"
            - !Join 
              - ""
              - - "set subnet "
                - !Ref VPCMGMTCIDR
            - "end"
            - "config firewall addrgrp"
            - "edit to-WEST"
            - "set member toMGMT toSVC1 toSVC2"
            - "next"
            - "end"
            - "config firewall policy"
            - "edit 1"
            - "set name East-West"
            - "set srcintf port1"
            - "set dstintf port1"
            - "set srcaddr all"
            - "set dstaddr to-WEST"
            - "set action accept"
            - "set schedule always"
            - "set service ALL"
            - "set logtraffic all"
            - "next"
            - "edit 2"
            - "set name South-North"
            - "set srcintf port1"
            - "set dstintf port1"
            - "set srcaddr all"
            - "set dstaddr to-WEST"
            - "set dstaddr-negate enable"
            - "set action accept"
            - "set schedule always"
            - "set service ALL"
            - "set logtraffic all"
            - "set nat enable"
            - "end"
            - "config system ha"
            - "set group-name fortinet"
            - "set group-id 1"
            - !Join 
              - ""
              - - "set password "
                - !Ref HAsecret  
            - "set mode a-p"
            - "set hbdev port2 50"
            - "set session-pickup enable"
            - "set ha-mgmt-status enable"
            - "config ha-mgmt-interface"
            - "edit 1"
            - "set interface port3"
            - !Join 
              - ""
              - - "set gateway "
                - !Ref MgmtSubnet1RouterIP
            - "next"
            - "end"
            - "set override disable"
            - "set priority 255"
            - "set unicast-hb enable"
            - !Join 
              - ""
              - - "set unicast-hb-peerip "
                - !Select [ "0", !Split [ "/", !Ref FortiGateBHeartbeatIP] ]    
            - "end"
  FgtB:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - fgtami
      InstanceType: !Ref FGTInstanceType
      IamInstanceProfile: !Ref InstanceProfile
      KeyName: !Ref KeyPair
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref FGTBENI0
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref FGTBENI1
          DeviceIndex: '1'
        - NetworkInterfaceId: !Ref FGTBENI2
          DeviceIndex: '2'
      Tags:
        - 
          Key: Name
          Value: !Join 
          - ''
          - - !Ref 'AWS::StackName'
            - '-FgtB'
      UserData:
        Fn::Base64: !Join
          - "\n"
          - - "config system global" 
            - "set hostname FGTB"
            - "end"
            - "config system interface"
            - "edit port1"
            - "set alias Data"
            - "set mode static"
            - !Join
              - ""
              - - "set ip "
                - !Sub ${FGTBENI0.PrimaryPrivateIpAddress}
                - /
                - !Select [ "1", !Split [ "/", !Ref DataSubnet2] ]
            - "set allowaccess ping https ssh"
            - "set mtu-override enable"
            - "set mtu 9001"
            - "next"
            - "edit port2"
            - "set alias hasync"
            - "set mode static"
            - !Join 
              - ""
              - - "set ip " 
                - !Ref FortiGateBHeartbeatIP 
            - "set allowaccess ping"
            - "set mtu-override enable"
            - "set mtu 9001"
            - "next"
            - "edit port3"
            - "set alias hamgmt"
            - "set mode static"
            - !Join 
              - ""
              - - "set ip "
                - !Sub ${FGTBENI2.PrimaryPrivateIpAddress}
                - /
                - !Select [ "1", !Split [ "/", !Ref MgmtSubnet2] ]  
            - "set allowaccess ping https ssh"
            - "set mtu-override enable"
            - "set mtu 9001"
            - "next"
            - "end"
            - "config router static"
            - "edit 1"
            - "set device port1"
            - !Join 
              - ""
              - - "set gateway "
                - !Ref DataSubnet2RouterIP
            - "end"
            - "config firewall address"
            - "edit toSVC1"
            - !Join 
              - ""
              - - "set subnet "
                - !Ref VPCSVC1CIDR
            - "next"
            - "edit toSVC2"
            - !Join 
              - ""
              - - "set subnet "
                - !Ref VPCSVC2CIDR
            - "next"
            - "edit toMGMT"
            - !Join 
              - ""
              - - "set subnet "
                - !Ref VPCMGMTCIDR
            - "end"
            - "config firewall addrgrp"
            - "edit to-WEST"
            - "set member toMGMT toSVC1 toSVC2"
            - "next"
            - "end"
            - "config firewall policy"
            - "edit 1"
            - "set name East-West"
            - "set srcintf port1"
            - "set dstintf port1"
            - "set srcaddr all"
            - "set dstaddr to-WEST"
            - "set action accept"
            - "set schedule always"
            - "set service ALL"
            - "set logtraffic all"
            - "next"
            - "edit 2"
            - "set name South-North"
            - "set srcintf port1"
            - "set dstintf port1"
            - "set srcaddr all"
            - "set dstaddr to-WEST"
            - "set dstaddr-negate enable"
            - "set action accept"
            - "set schedule always"
            - "set service ALL"
            - "set logtraffic all"
            - "set nat enable"
            - "next"
            - "end"
            - "config system ha"
            - "set group-name fortinet"
            - "set group-id 1"
            - !Join 
              - ""
              - - "set password "
                - !Ref HAsecret  
            - "set mode a-p"
            - "set hbdev port2 50"
            - "set session-pickup enable"
            - "set ha-mgmt-status enable"
            - "config ha-mgmt-interface"
            - "edit 1"
            - "set interface port3"
            - !Join 
              - ""
              - - "set gateway "
                - !Ref MgmtSubnet2RouterIP
            - "next"
            - "end"
            - "set override disable"
            - "set priority 100"
            - "set unicast-hb enable"
            - !Join 
              - ""
              - - "set unicast-hb-peerip "
                - !Select [ "0", !Split [ "/", !Ref FortiGateAHeartbeatIP] ]    
            - "end"
  FGTAENI0:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      Description: port1
      GroupSet:
        - !Ref FGTSecGrpBase
      SourceDestCheck: false
      SubnetId: !Ref DataSubnetA
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - FgtAENI0
        - Key: Interface
          Value: eth0
  FGTBENI0:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      Description: port1
      GroupSet:
        - !Ref FGTSecGrpBase
      SourceDestCheck: false
      SubnetId: !Ref DataSubnetB
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - FgtBENI0
        - Key: Interface
          Value: eth0
  FGTAENI1:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      Description: port2
      GroupSet:
        - !Ref FGTSecGrpBase
      SourceDestCheck:  false
      SubnetId: !Ref HeartbeatSubnetA
      PrivateIpAddresses:
        - PrivateIpAddress: !Select 
            - '0'
            - !Split 
              - /
              - !Ref FortiGateAHeartbeatIP
          Primary:  true
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - FgtAENI1
  FGTBENI1:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      Description: port2
      GroupSet:
        - !Ref FGTSecGrpBase
      SourceDestCheck:  false
      SubnetId: !Ref HeartbeatSubnetB
      PrivateIpAddresses:
        - PrivateIpAddress: !Select 
            - '0'
            - !Split 
              - /
              - !Ref FortiGateBHeartbeatIP
          Primary:  true
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - FgtBENI2
  FGTAENI2:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      Description: port3
      GroupSet:
        - !Ref FGTSecGrpBase
      SourceDestCheck:  false
      SubnetId: !Ref MgmtSubnetA
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - FgtAENI3
  FGTBENI2:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      Description: port3
      GroupSet:
        - !Ref FGTSecGrpBase
      SourceDestCheck:  false
      SubnetId: !Ref MgmtSubnetB
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - FgtBENI3
  ClusterEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
    DependsOn: FgtA
  FgtAMgmtEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
    DependsOn: FgtA
  FgtBMgmtEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
    DependsOn: FgtB
  ClusterAEIPASSOCIATION:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt 
        - ClusterEIP
        - AllocationId
      NetworkInterfaceId: !Ref FGTAENI0
  FgtAMgmtEIPASSOCIATION:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt 
        - FgtAMgmtEIP
        - AllocationId
      NetworkInterfaceId: !Ref FGTAENI2
  FgtBMgmtEIPASSOCIATION:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt 
        - FgtBMgmtEIP
        - AllocationId
      NetworkInterfaceId: !Ref FGTBENI2
  RelayRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - '-RelayRouteTable'
  RelayDefaultRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RelayRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NetworkInterfaceId: !Ref FGTAENI0
  DataRouteTable:
    Properties:
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref 'AWS::StackName'
              - SECHUBData-RT
      VpcId: !Ref VPCID
    Type: 'AWS::EC2::RouteTable'
  DataDefaultRoute:
    DependsOn: TgwAttHUB
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref DataRouteTable
    Type: 'AWS::EC2::Route'
  DataToMgmtRoute:
    DependsOn: TgwAttHUB
    Properties:
      DestinationCidrBlock: !Ref VPCMGMTCIDR
      TransitGatewayId: !Ref TGW1
      RouteTableId: !Ref DataRouteTable
    Type: 'AWS::EC2::Route'
  DataToSVC1Route:
    DependsOn: TgwAttHUB
    Properties:
      DestinationCidrBlock: !Ref VPCSVC1CIDR
      TransitGatewayId: !Ref TGW1
      RouteTableId: !Ref DataRouteTable
    Type: 'AWS::EC2::Route'
  DataToSVC2Route:
    DependsOn: TgwAttHUB
    Properties:
      DestinationCidrBlock: !Ref VPCSVC2CIDR
      TransitGatewayId: !Ref TGW1
      RouteTableId: !Ref DataRouteTable
    Type: 'AWS::EC2::Route'
  HeartbeatAZ1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref HeartbeatSubnetA
      RouteTableId: !Ref HeartbeatRouteTable
  HeartbeatAZ2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref HeartbeatSubnetB
      RouteTableId: !Ref HeartbeatRouteTable
  AZ1SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref RelaySubnetA
      RouteTableId: !Ref RelayRouteTable
  AZ2SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref RelaySubnetB
      RouteTableId: !Ref RelayRouteTable
  SubnetRouteTableAssociation1:
    Properties:
      RouteTableId: !Ref DataRouteTable
      SubnetId: !Ref DataSubnetA
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  SubnetRouteTableAssociation2:
    Properties:
      RouteTableId: !Ref DataRouteTable
      SubnetId: !Ref DataSubnetB
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  SubnetRouteTableAssociation3:
    Properties:
      RouteTableId: !Ref MgmtRouteTable
      SubnetId: !Ref MgmtSubnetA
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  SubnetRouteTableAssociation4:
    Properties:
      RouteTableId: !Ref MgmtRouteTable
      SubnetId: !Ref MgmtSubnetB
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  S3Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:*'
            Resource:
              - '*'
      RouteTableIds:
        - !Ref MgmtRouteTable
      ServiceName: !Join 
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcId: !Ref VPCID
Outputs:
  Svc1Ubu1Id:
    Description: InstanceId of Svc1Ubu1
    Value: !Ref SVC1Ubu1
  Svc2Ubu1Id:
    Description: InstanceId of Svc2Ubu1
    Value: !Ref SVC2Ubu1
  MGMTUbu1Id:
    Description: InstanceId of MGMTUbu1
    Value: !Ref MGMTUbu1  
  MGMTEIP:
    Description: IP Address of MGMT Ubuntu Host
    Value: !Ref EIPMGMTUbu1ENI1

    
